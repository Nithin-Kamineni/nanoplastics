# Print the results
cat("R-squared:", r_squared, "\n")
cat("Adjusted R-squared:", adjusted_r_squared, "\n")
cat("RMSE:", rmse, "\n")
# Print coordinates used for the line part of the plot
print(df.simKS)
# Print coordinates used for the point part of the plot
print(Obs.KS220)
library(plumber)
# Set the working directory to the script's directory
#setwd(script_dir)
# r <- plumber::plumb(file = 'testAPIget.R')
r <- plumber::plumb(file = 'R-api.R')
#setwd(dir = here::here())
script_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
# Set the working directory to the script's directory
setwd(script_dir)
# r <- plumber::plumb(file = 'testAPIget.R')
r <- plumber::plumb(file = 'R-api.R')
r$run(port = 9000, host="0.0.0.0", swagger=TRUE)
# r <- plumber::plumb(file = 'testAPIget.R')
r <- plumber::plumb(file = 'R-api.R')
library(jsonlite)
# r <- plumber::plumb(file = 'testAPIget.R')
r <- plumber::plumb(file = 'R-api.R')
PBPK.code <-'
$PROB
## Microplastics (MPs) PBPK model for male mouse
- Author    : Chi-Yun Chen
- Advisor   : Zhoumeng Lin
- Date      : February 12, 2024
- Strucutre : Lung, Spleen, Liver, GI tract, Kidney, Brain, Rest of body, Blood
$PARAM @annotated
// #+ Body weight and fraction of blood flow to tissues
BW     : 0.02      : kg,       body weight                       ; Measured data from Liang et al., 2021
QCC    : 16.5      : L/h/kg^0.75, Cardiac output; Value obtained ; Brown et al., 1997
QLuC   : 1         : % of QCC, Fraction of blood flow to lung    ; Brown et al., 1997
QSC    : 0.011     : % of QCC, Fraction of blood flow to spleen  ; Davis and Morris, 1993
QLC    : 0.161     : % of QCC, Fraction of blood flow to liver   ; Brown et al., 1997
QGIC   : 0.141     : % of QCC, Fraction of blood flow to GI tract; Davis and Morris, 1993
QKC    : 0.091     : % of QCC, Fraction of blood flow to kidney  ; Brown et al., 1997
QBRC   : 0.033     : % of QCC, Fraction of blood flow to brain   ; Brown et al., 1997; Upton, 2008
// #+ Fraction of volume of tissues out of body weight
VLuC   : 0.007     : % of BW,  Fraction of volume of lung        ; Measured data from Dr. Kreyling
VGIC   : 0.042     : % of BW,  Fraction of volume of GI          ; Measured data from Dr. Kreyling
VLC    : 0.055     : % of BW,  Fraction of volume of liver       ; Measured data from Dr. Kreyling
VKC    : 0.017     : % of BW,  Fraction of volume of kidney      ; Measured data from Dr. Kreyling
VSC    : 0.005     : % of BW,  Fraction of volume of spleen      ; Measured data from Dr. Kreyling
VBRC   : 0.017     : % of BW,  Fraction of volume of brain       ; Brown et al., 1997; Upton, 2008
VBC    : 0.049     : % of BW,  Fraction of volume of blood       ; Measured data from Dr. Kreyling
// #+ Fraction of blood volume in tissues
BVLu   : 0.50      : % of VLu, Fraction of blood volume in lung  ; Brown et al., 1997
BVGI   : 0.0746    : % of VGI, Fraction of blood volume in GI    ; Estimated from MacCalman and Tran, 2009
BVL    : 0.31      : % of VL,  Fraction of blood volume in liver ; Brown et al., 1997
BVK    : 0.24      : % of VLK, Fraction of blood volume in kidney; Brown et al., 1997
BVS    : 0.17      : % of VLS, Fraction of blood volume in spleen; Brown et al., 1997
BVBR   : 0.50      : % of VLS, Fraction of blood volume in brain; Brown et al., 1997
BVR    : 0.04      : % of VR,  Fraction of blood volume in rest of body; Brown et al., 1997
// #+ Partition coefficient
PLu    : 0.15      : Unitless, Partition coefficient of Lung     ; Lin et al., 2016
PGI    : 0.15      : Unitless, Partition coefficient of GI       ; Lin et al., 2016
PL     : 0.08      : Unitless, Partition coefficient of Liver    ; Lin et al., 2016
PK     : 0.15      : Unitless, Partition coefficient of Kidney   ; Lin et al., 2016
PS     : 0.15      : Unitless, Partition coefficient of Spleen   ; Lin et al., 2016
PBR    : 0.15      : Unitless, Partition coefficient of Brain    ; Lin et al., 2016
PR     : 0.15      : Unitless, Partition coefficient of Rest of body; Lin et al., 2016
// #+ Membrane-limited permeability
PALuC  : 0.001     : Unitless, Membrane-limited permeability coefficient of Lung         ; Lin et al., 2016
PAGIC  : 0.001     : Unitless, Membrane-limited permeability coefficient of GI           ; Lin et al., 2016
PALC   : 0.001     : Unitless, Membrane-limited permeability coefficient of Liver        ; Lin et al., 2016
PAKC   : 0.001     : Unitless, Membrane-limited permeability coefficient of Kidney       ; Lin et al., 2016
PASC   : 0.001     : Unitless, Membrane-limited permeability coefficient of Spleen       ; Lin et al., 2016
PABRC  : 0.000001  : Unitless, Membrane-limited permeability coefficient of Brain        ; Lin et al., 2016
PARC   : 0.000001  : Unitless, Membrane-limited permeability coefficient of Rest of body ; Lin et al., 2016
// #+ Endocytic parameters in spleen; Chou et al., 2023_Table S2
KSRESrelease       : 0.09     : 1/h,      Release rate constant of phagocytic cells
KSRESmax           : 10       : 1/h,      Maximum uptake rate constant of phagocytic cells
KSRES50            : 24       : h,        Time reaching half maximum uptake rate
KSRESn             : 0.5      : Unitless, Hill coefficient, (unitless)
ASREScap           : 150      : ug/g,     tissue, Uptake capacity per tissue weight
// #+ Endocytic parameters in lung
KLuRESrelease     : 0.002    : 1/h,      Release rate constant of phagocytic cells
KLuRESmax         : 0.01     : 1/h,      Maximum uptake rate constant of phagocytic cells
KLuRES50          : 48       : h,        Time reaching half maximum uptake rate
KLuRESn           : 5        : Unitless, Hill coefficient, (unitless)
ALuREScap         : 89       : ug/g,     tissue, Uptake capacity per tissue weight
// #+ Endocytic parameters in kidney
KKRESrelease       : 0.0075   : 1/h,      Release rate constant of phagocytic cells
KKRESmax           : 0.5      : 1/h,      Maximum uptake rate constant of phagocytic cells
KKRES50            : 24       : h,        Time reaching half maximum uptake rate
KKRESn             : 0.5      : Unitless, Hill coefficient, (unitless)
AKREScap           : 330      : ug/g,     tissue, Uptake capacity per tissue weight
// #+ Endocytic parameters in liver
KLRESrelease       : 0.02     : 1/h,      Release rate constant of phagocytic cells
KLRESmax           : 20       : 1/h,      Maximum uptake rate constant of phagocytic cells
KLRES50            : 24       : h,        Time reaching half maximum uptake rate
KLRESn             : 0.5      : Unitless, Hill coefficient, (unitless)
ALREScap           : 195      : ug/g,     tissue, Uptake capacity per tissue weight
// #+ Uptake and elimination parameters
KGIb               : 5.41e-3  : 1/h, Absorption rate of GI tract
Kfeces             : 0.141    : 1/h, Fecal clearance
KbileC             : 0.00003  : L/h/kg^0.75, Biliary clearance
KurineC            : 0.00003  : L/h/kg^0.75, Urinary clearance
// #+ Albumin-binding parameters
KD                 : 206.15    : mg/L, Equilibrium dissociation constant      ; Anozie et al., 2020
N                  : 1         : Binding sites                      ; Ju et al., 2020
Calb               : 0.035     : mg/L, Albumin concentration        ; Maclaren and Petras, 1976
Mwalb              : 66500     : g/mol, Molecular weight of albumin ; Byrne et al., 2018
MwPS               : 191600    : g/mol, Molecular weight of PS      ; Liu et al., 2021
$MAIN
// #+ Blood flow to tissues (L/h)
double QC     = QCC*pow(BW,0.75);
double QGI    = QC*QGIC;
double QL     = QC*QLC;
double QK     = QC*QKC;
double QBR    = QC*QBRC;
double QS     = QC*QSC;
double QR     = QC*(1 - QGIC - QLC - QKC - QSC - QBRC);
double QBal   = QC - (QGI + QL + QK + QS + QBR + QR);
// #+ Tissue volumes (L; kg)
double VLu    = BW*VLuC;
double VGI    = BW*VGIC;
double VL     = BW*VLC;
double VK     = BW*VKC;
double VS     = BW*VSC;
double VBR    = BW*VBRC;
double VB     = BW*VBC;
double VR     = BW*(1 - VLuC - VGIC - VLC - VKC - VSC - VBRC - VBC);
double VBal   = BW - (VLu + VGI + VL + VK + VS + VBR + VR + VB);
// #+ Tissue volumes for different compartments (L)
double VLub   = VLu*BVLu;
double VLut   = VLu-VLub;
double VGIb   = VGI*BVGI;
double VGIt   = VGI-VGIb;
double VLb    = VL*BVL;
double VLt    = VL-VLb;
double VKb    = VK*BVK;
double VKt    = VK-VKb;
double VSb    = VS*BVS;
double VSt    = VS-VSb;
double VBRb   = VBR*BVBR;
double VBRt   = VBR-VBRb;
double VRb    = VR*BVR;
double VRt    = VR-VRb;
// #+ Permeability coefficient-surface area cross-product (L/h)
double PALu   = PALuC*QC;
double PAGI   = PAGIC*QGI;
double PAL    = PALC*QL;
double PAK    = PAKC*QK;
double PAS    = PASC*QS;
double PABR   = PABRC*QBR;
double PAR    = PARC*QR;
// #+ Endocytosis rate (1/h)
double KSRESUP     = KSRESmax*(1-(ASRES/(ASREScap*VS)));
double KKRESUP     = KKRESmax*(1-(AKRES/(AKREScap*VK)));
double KLuRESUP    = KLuRESmax*(1-(ALuRES/(ALuREScap*VLu)));
double KLRESUP     = KLRESmax*(1-(ALRES/(ALREScap*VL)));
// #+ Biliary excretion
double Kbile       = KbileC*pow(BW, 0.75);
double Kurine      = KurineC*pow(BW, 0.75);
// #+ Maximum protein-binding capacity (mg/L)
double Bmax     = Calb*N*MwPS/Mwalb*1000;
// #+ Unbound fraction in blood (-)
double fu      = (KD)/(Bmax+KD);
$INIT @annotated
AA                : 0  : mg, Amount of MPs in arterial blood compartment
AV                : 0  : mg, Amount of MPs in venous blood compartment
ARb               : 0  : mg, Amount of MPs in capillary blood of remaining tissues
ARt               : 0  : mg, Amount of MPs in remaining tissues compartment
ALub              : 0  : mg, Amount of MPs in capillary blood of lung
ALut              : 0  : mg, Amount of MPs in lung compartment
ALuRES            : 0  : mg, Amount of MPs in phagocytic cells of lung
ASb               : 0  : mg, Amount of MPs in capillary blood of spleen
ASt               : 0  : mg, Amount of MPs in spleen compartment
ASRES             : 0  : mg, Amount of MPs in phagocytic cells of spleen
ABRb              : 0  : mg, Amount of MPs in capillary blood of brain
ABRt              : 0  : mg, Amount of MPs in brain compartment
AGIb              : 0  : mg, Amount of MPs in capillary blood of GI
AGIt              : 0  : mg, Amount of MPs in GI tract
ALumen            : 0  : mg, Amount of MPs in GI tract lumen
ALb               : 0  : mg, Amount of MPs in capillary blood of liver
ALt               : 0  : mg, Amount of MPs in liver compartment
ALRES             : 0  : mg, Amount of MPs in phagocytic cells of liver
AKb               : 0  : mg, Amount of MPs in capillary blood of Kidney
AKt               : 0  : mg, Amount of MPs in Kidney
AKRES             : 0  : mg, Amount of NPs in phagocytic cells of Kidney
Aurine            : 0  : mg, Amount of MPs in urinary excretion
Abile             : 0  : mg, Amount of MPs in biliary excretion
Afeces            : 0  : mg, Amount of MPs in feces excretion
Adose             : 0  : mg, Amount of administrated MPs
AUCB              : 0  : mg/L*h, AUC in blood
AUCLu             : 0  : mg/L*h, AUC in lung
AUCS              : 0  : mg/L*h, AUC in spleen
AUCRt             : 0  : mg/L*h, AUC in rest of tissue
AUCGI             : 0  : mg/L*h, AUC in GI tract
AUCL              : 0  : mg/L*h, AUC in liver
AUCK              : 0  : mg/L*h, AUC in kidney
AUCBR             : 0  : mg/L*h, AUC in brain
$ODE
// #+ Concentrations in the tissues (C) and in the venous plasma leaving each of the tissues (CV) (Unit: mg/L)
// #+ A:arterial blood; V: venous blood compartment; L: Liver; K: Kidney; S: Spleen;
// #+ GI: GI tract; Lu: lung; BR: Brain; R: rest of tissues
double CA        = AA/(VB*0.2);
double CV        = AV/(VB*0.8);
double CVL       = ALb/VLb;
double CLt       = ALt/VLt;
double CVK       = AKb/VKb;
double CKt       = AKt/VKt;
double CVS       = ASb/VSb;
double CSt       = ASt/VSt;
double CVGI      = AGIb/VGIb;
double CGIt      = AGIt/VGIt;
double CVLu      = ALub/VLub;
double CLut      = ALut/VLut;
double CVBR      = ABRb/VBRb;
double CBRt      = ABRt/VBRt;
double CVR       = ARb/VRb;
double CRt       = ARt/VRt;
// #+ Equation for estimation of the rate of each compartment
double RAA       = QC*CVLu*fu - QC*CA*fu;
double RAV       = QL*CVL*fu + QK*CVK*fu + QR*CVR*fu + QBR*CVBR*fu - QC*CV*fu;
double RARb      = QR*(CA - CVR)*fu - PAR*CVR*fu + (PAR*CRt)/PR;
double RARt      = PAR*CVR*fu - (PAR*CRt)/PR;
double RALub     = QC*(CV - CVLu)*fu - PALu*CVLu*fu + (PALu*CLut)/PLu;
double RALut     = PALu*CVLu*fu - (PALu*CLut)/PLu- (KLuRESUP*ALut - KLuRESrelease*ALuRES);
double RALuRES   = KLuRESUP*ALut - KLuRESrelease*ALuRES;
double RASb      = QS*(CA-CVS)*fu - PAS*CVS*fu + (PAS*CSt)/PS;
double RASt      = PAS*CVS*fu - (PAS*CSt)/PS- KSRESUP*ASt + KSRESrelease*ASRES;
double RASRES    = KSRESUP*ASt-KSRESrelease*ASRES;
double RAGIb     = QGI*(CA-CVGI)*fu - PAGI*CVGI*fu + (PAGI*CGIt)/PGI + KGIb*ALumen;
double RAGIt     = PAGI*CVGI*fu - (PAGI*CGIt)/PGI;
double RALumen   = Kbile*CLt - (Kfeces + KGIb)*ALumen;
double RALb      = QL*(CA-CVL)*fu + QS*CVS*fu + QGI*CVGI*fu - PAL*CVL*fu + (PAL*CLt)/PL - KLRESUP*ALb + KLRESrelease*ALRES;
double RALt      = PAL*CVL*fu - (PAL*CLt)/PL - Kbile*CLt;
double RALRES    = KLRESUP*ALb - KLRESrelease*ALRES;
double RAKb      = QK*(CA-CVK)*fu - PAK*CVK*fu + (PAK*CKt)/PK - Kurine*CVK*fu;
double RAKt      = PAK*CVK*fu - (PAK*CKt)/PK- KKRESUP*AKt + KKRESrelease*AKRES;
double RAKRES    = KKRESUP*AKt-KKRESrelease*AKRES;
double RABRb     = QBR*(CA-CVBR)*fu - PABR*CVBR*fu + (PABR*CBRt)/PBR;
double RABRt     = PABR*CVBR*fu - (PABR*CBRt)/PBR;
double RAurine   = Kurine*CVK*fu;
double RAbile    = Kbile*CLt;
double RAfeces   = Kfeces*ALumen;
// #+ ODE equations for compartments in the male mice
dxdt_AA          = RAA;
dxdt_AV          = RAV;
dxdt_ARb         = RARb;
dxdt_ARt         = RARt;
dxdt_ALut        = RALut;
dxdt_ALub        = RALub;
dxdt_ALuRES      = RALuRES;
dxdt_ASb         = RASb;
dxdt_ASt         = RASt;
dxdt_ASRES       = RASRES;
dxdt_AGIb        = RAGIb;
dxdt_AGIt        = RAGIt;
dxdt_ALumen      = RALumen;
dxdt_ALb         = RALb;
dxdt_ALt         = RALt;
dxdt_ALRES       = RALRES;
dxdt_AKb         = RAKb;
dxdt_AKt         = RAKt;
dxdt_AKRES       = RAKRES;
dxdt_ABRb        = RABRb;
dxdt_ABRt        = RABRt;
dxdt_Aurine      = RAurine;
dxdt_Abile       = RAbile;
dxdt_Afeces      = RAfeces;
// #+ Total amount of MPs in tissues
double ABlood    = AA + AV;
double ALung     = ALut + ALub + ALuRES;
double ASpleen   = ASb + ASt + ASRES;
double ARest     = ARb + ARt;
double AGI       = AGIb + AGIt + ALumen;
double ALiver    = ALb + ALt + ALRES;
double AKidney   = AKb + AKt + AKRES;
double ABrain    = ABRb + ABRt;
// #+ AUC
dxdt_AUCB        = (AA + AV)/VB;
dxdt_AUCLu       = (ALut + ALub + ALuRES)/VLu;
dxdt_AUCS        = (ASb + ASt + ASRES)/VS;
dxdt_AUCRt       = (ARb + ARt)/VR;
dxdt_AUCGI       = (AGIb + AGIt + ALumen)/VGI;
dxdt_AUCL        = (ALb + ALt + ALRES)/VL;
dxdt_AUCK        = (AKb + AKt + AKRES)/VK;
dxdt_AUCBR       = (ABRb + ABRt)/VBR;
// #+ Mass Balance
double Tmass   = ABlood + ALung + AGI + ALiver + ASpleen + AKidney + ARest + ABrain + Aurine + Afeces;
//double BAL     = Adose - Tmass;
$TABLE
// #+ Total concentrations of MPs in Tissues
capture Blood     = ABlood/VB;
capture Lung      = ALung/VLu;
capture GI        = AGI/VGI;
capture Spleen    = ASpleen/VS;
capture Rest      = ARest/VR;
capture Liver     = ALiver/VL;
capture Kidney    = AKidney/VK;
capture Brain     = ABrain/VBR;
capture Urine     = Aurine;
capture Feces     = Afeces;
capture AUC_B     = AUCB;
capture AUC_Lu    = AUCLu;
capture AUC_S     = AUCS;
capture AUC_Rt    = AUCRt;
capture AUC_GI    = AUCGI;
capture AUC_L     = AUCL;
capture AUC_K     = AUCK;
capture AUC_BR    = AUCBR;
'
## Build mrgsolve-based PBPK Model
mod <- mcode ("MPsPBPK.code", PBPK.code)
## Input data set for model calibration/ oral
setwd("C:/profitional/nanoplastics/input data")
######################################################################################################
Obs.KB220 <-read.csv(file="KB220.csv")      # KB220 dataset: matrix: Blood (Unit: mg/kg)/Keinänen et al. (2021)
names(Obs.KB220) = c("Time", "CBlood")
Obs.KLu220 <-read.csv(file="KLu220.csv")    # KLu220 dataset: matrix: Lung (Unit: mg/kg)/Keinänen et al. (2021)
names(Obs.KLu220) = c("Time", "CLung")
Obs.KL220 <-read.csv(file="KL220.csv")      # KL220 dataset: matrix: Liver (Unit: mg/kg)/Keinänen et al. (2021)
names(Obs.KL220) = c("Time", "CLiver")
Obs.KS220 <-read.csv(file="KS220.csv")      # KS220 dataset: matrix: Spleen (Unit: mg/kg)/Keinänen et al. (2021)
names(Obs.KS220) = c("Time", "CSpleen")
Obs.KK220 <-read.csv(file="KK220.csv")      # KK220 dataset: matrix: Kidney (Unit: mg/kg)/Keinänen et al. (2021)
names(Obs.KK220) = c("Time", "CKidney")
Obs.KU220 <-read.csv(file="KU220.csv")      # KU220 dataset: matrix: Urine (Unit: mg)/Keinänen et al. (2021)
names(Obs.KU220) = c("Time", "AUrine")
Obs.KGI220 <-read.csv(file="KGI220.csv")    # KGI220 dataset: matrix: GI tract (Unit: mg)/Keinänen et al. (2021)
names(Obs.KGI220) = c("Time", "CGI")
######################################################################################
# Define the prediction function
## Define the prediction function (for least squares fit using levenberg-marquart algorithm)
pred <- function(pars) {
## Get out of log domain
pars %<>% lapply(exp)                 ## return a list of exp (parameters) from log domain
## Define the event data sets (exposure scenario) [mrgsolve CH3.2]
tinterval     = 24     # h
End_time      = 4     # day
## Exposure scenario for Single dose at 0.1 mg
TDOSE.K       = 1      # Dosing frequency during exposure time
DOSEoral.K    = 0.1    # mg
## Oral exposure route
ex.K <- ev(ID = 1, amt = DOSEoral.K, ii = tinterval, addl = TDOSE.K-1,
cmt = "ALumen", replicate = FALSE)
## set up the exposure time
tsamp.K  = tgrid(0, tinterval*(TDOSE.K-1) + tinterval*End_time, 0.1)
## Get a prediction
out.K <-
mod %>%                                               # model object
param(pars) %>%                                       # to update the parameters in the model subject
Req(Spleen, Kidney, Urine, Blood, Lung, Liver, GI, Brain, Rest, Feces)%>%                             # select model output
update(atol = 1e-70, maxstep = 50000) %>%
mrgsim_d(data = ex.K, tgrid = tsamp.K)
out.K <-cbind.data.frame(Time     = out.K$time/24,     # day
CSpleen  = out.K$Spleen,
CKidney  = out.K$Kidney,
AUrine   = out.K$Urine,
CBlood   = out.K$Blood,
CLung    = out.K$Lung,
CLiver   = out.K$Liver,
CGI      = out.K$GI,
CBrain   = out.K$Brain,
CRest    = out.K$Rest,
AFeces   = out.K$Feces)
return(list("out.K"=out.K))
}
## Cost function (FME)
## Estimate the model residual by modCost function
MCcost<-function (pars){
out <- pred (pars)
cost<- modCost  (model=out$out.K, obs= Obs.KS220, x="Time")
cost<- modCost  (model=out$out.K, obs= Obs.KK220, x="Time", cost=cost)
cost<- modCost  (model=out$out.K, obs= Obs.KU220, x="Time", cost=cost)
cost<- modCost  (model=out$out.K, obs= Obs.KB220, x="Time", cost=cost)
cost<- modCost  (model=out$out.K, obs= Obs.KL220, x="Time", cost=cost)
cost<- modCost  (model=out$out.K, obs= Obs.KLu220, x="Time", cost=cost)
cost<- modCost  (model=out$out.K, obs= Obs.KGI220, x="Time", cost=cost)
return(cost)
}
#Fitting
theta.final <- log(c(
PLu    = 0.15,       # Partition coefficient
PL     = 0.0001,
PK     = 0.155,
PS     = 0.15,
PGI    = 0.15,
PBR    = 0.15,
PR     = 0.15,
PALuC  = 0.001,      # Membrane-limited permeability coefficient
PAGIC  = 0.001,
PALC   = 0.0001,
PAKC   = 0.01,
PASC   = 0.002712,
PABRC  = 0.000001,
PARC   = 0.006863,
KSRESrelease  = 0.004523,    #Release rate constant of phagocytic cells
KLuRESrelease = 0.002,
KKRESrelease  = 0.018,
KLRESrelease  = 0.02,
KSRESmax      = 7.21,        #Maximum uptake rate constant of phagocytic cells
KLuRESmax     = 0.55,
KKRESmax      = 0.5,
KLRESmax      = 0.00790,
ASREScap      = 150,         #Uptake capacity per tissue weight
ALuREScap     = 89,
AKREScap      = 330,
ALREScap      = 195,
KD            = 2880.663,
N             = 1,
KGIb          = 4.052e-5,    #Absorption rate of GI tract (1/h)
KbileC        = 0.00003,     #Biliary clearance (L/h/kg^0.75)
Kfeces        = 0.535,       #Fecal clearance (L/h)
KurineC       = 0.000309     #Urinary clearance (L/h/kg^0.75)
))
## Calibration results
df.simKS   = cbind.data.frame (Time=Sim.fitK$Time, CSpleen=Sim.fitK$CSpleen)
df.simKK   = cbind.data.frame (Time=Sim.fitK$Time, CKidney=Sim.fitK$CKidney)
df.simKU   = cbind.data.frame (Time=Sim.fitK$Time, AUrine=Sim.fitK$AUrine)
df.simKL   = cbind.data.frame (Time=Sim.fitK$Time, CLiver=Sim.fitK$CLiver)
df.simKLu  = cbind.data.frame (Time=Sim.fitK$Time, CLung =Sim.fitK$CLung)
df.simKB   = cbind.data.frame (Time=Sim.fitK$Time, CBlood=Sim.fitK$CBlood)
df.simKGI  = cbind.data.frame (Time=Sim.fitK$Time, CGI=Sim.fitK$CGI)
df.simK    = cbind.data.frame (Time=Sim.fitK$Time,
CBrain=Sim.fitK$CBrain,
CRest =Sim.fitK$CRest,
AFeces=Sim.fitK$AFeces)
#write.csv(df.simKS, file = "Fitting Spleen220_Kein.csv", row.names = FALSE)
#write.csv(df.simKK, file = "Fitting Kidney220_Kein.csv", row.names = FALSE)
#write.csv(df.simKU, file = "Fitting Urine220_Kein.csv", row.names = FALSE)
#write.csv(df.simKLu, file = "Fitting Lung220_Kein.csv", row.names = FALSE)
#write.csv(df.simKL, file = "Fitting Liver220_Kein.csv", row.names = FALSE)
#write.csv(df.simKB, file = "Fitting Blood220_Kein.csv", row.names = FALSE)
#write.csv(df.simKGI, file = "Fitting GI220_Kein.csv", row.names = FALSE)
#write.csv(df.simK, file = "Fitting All220_Kein.csv", row.names = FALSE)
######################################################################################
## Model calibration plot using ggplot2
plot.KS220=
ggplot() +
geom_line (data = df.simKS, aes(Time, CSpleen), col="firebrick", lwd=1)+
geom_point(data = Obs.KS220, aes(Time, CSpleen),size=2.5) + ylab("MPs concentration in spleen (mg/kg)")
plot.KK220=
ggplot() +
geom_line (data = df.simKK, aes(Time, CKidney), col="firebrick", lwd=1)+
geom_point(data = Obs.KK220, aes(Time, CKidney),size=2.5) + ylab("MPs concentration in kidney (mg/kg)")
plot.KU220=
ggplot() +
geom_line (data = df.simKU, aes(Time, AUrine), col="firebrick", lwd=1)+
geom_point(data = Obs.KU220, aes(Time, AUrine),size=2.5) + ylab("MPs amount in urine (mg)")
plot.KB220=
ggplot() +
geom_line (data = df.simKB, aes(Time, CBlood), col="firebrick", lwd=1)+
geom_point(data = Obs.KB220, aes(Time, CBlood),size=2.5) + ylab("MPs concentration in blood (mg/L)")
plot.KL220=
ggplot() +
geom_line (data = df.simKL, aes(Time, CLiver), col="firebrick", lwd=1)+
geom_point(data = Obs.KL220, aes(Time, CLiver),size=2.5) + ylab("MPs concentration in liver (mg/kg)")
plot.KLu220=
ggplot() +
geom_line (data = df.simKLu, aes(Time, CLung), col="firebrick", lwd=1)+
geom_point(data = Obs.KLu220, aes(Time, CLung),size=2.5) + ylab("MPs concentration in lung (mg/kg)")
plot.KGI220=
ggplot() +
geom_line (data = df.simKGI, aes(Time, CGI), col="firebrick", lwd=1)+
geom_point(data = Obs.KGI220, aes(Time, CGI),size=2.5) + ylab("MPs concentration in GI tract (mg/kg)")
print(df.simKS)
data_list <- list(
df_simKS = df.simKS,
Obs_KS220 = Obs.KS220,
df_simKK = df.simKK,
Obs_KK220 = Obs.KK220,
df_simKU = df.simKU,
Obs_KU220 = Obs.KU220,
df_simKB = df.simKB,
Obs_KB220 = Obs.KB220,
df_simKL = df.simKL,
Obs_KL220 = Obs.KL220,
df_simKLu = df.simKLu,
Obs_KLu220 = Obs.KLu220,
df_simKGI = df.simKGI,
Obs_KGI220 = Obs.KGI220
)
# Convert each dataframe in the list to a list itself for JSON compatibility
data_list <- lapply(data_list, function(df) as.list(df))
# Create a response object (Note: Plumber automatically converts lists to JSON)
response <- list(
message = "220 Data",
data = data_list
)
return(response)
print(response)
r$run(port = 9000, host="0.0.0.0", swagger=TRUE)
r$run(port = 9000, host="0.0.0.0", swagger=TRUE)
r$run(port = 9000, host="0.0.0.0", swagger=TRUE)
# r <- plumber::plumb(file = 'testAPIget.R')
r <- plumber::plumb(file = 'R-api.R')
# r <- plumber::plumb(file = 'testAPIget.R')
r <- plumber::plumb(file = 'R-api.R')
r$run(port = 9000, host="0.0.0.0", swagger=TRUE)
plumb(file='C:/profitional/nanoplastics/R-api.R')$run()
plumb(file='C:/profitional/nanoplastics/R-api.R')$run()
plumb(file='C:/profitional/nanoplastics/R-api.R')$run()
plumb(file='C:/profitional/nanoplastics/R-api.R')$run()
plumb(file='C:/profitional/nanoplastics/R-api.R')$run()
plumb(file='C:/profitional/nanoplastics/R-api.R')$run()
library(plumber)
#setwd(dir = here::here())
script_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
# Set the working directory to the script's directory
setwd(script_dir)
# r <- plumber::plumb(file = 'testAPIget.R')
r <- plumber::plumb(file = 'R-api.R')
r$run(port = 9000, host="0.0.0.0", swagger=TRUE)
